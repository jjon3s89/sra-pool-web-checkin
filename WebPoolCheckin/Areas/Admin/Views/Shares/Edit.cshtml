@model WebPoolCheckin.Models.Share

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Share</legend>

        @Html.HiddenFor(model => model.Id)
        @*
        <div class="editor-label">
            @Html.LabelFor(model => model.Notes)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Notes)
            @Html.ValidationMessageFor(model => model.Notes)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Message)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Message)
            @Html.ValidationMessageFor(model => model.Message)
        </div>
        *@

        <div class="editor-label">
            @Html.LabelFor(model => model.Active)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Active)
            @Html.ValidationMessageFor(model => model.Active)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Share_Address, "Address")
        </div>
        <div class="editor-field">
            @Html.DropDownList("Share_Address", String.Empty)
            @Html.ValidationMessageFor(model => model.Share_Address)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Paid_Dues)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Paid_Dues)
            @Html.ValidationMessageFor(model => model.Paid_Dues)
        </div>
        
        <div class="editor-label">
            @Html.Label("Employee ID")
        </div>
        <div class="editor-field">
            @Html.Editor("employeeId")
            @Html.ValidationMessage("employeeId")
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
